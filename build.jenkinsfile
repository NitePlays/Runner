@Library('SharedLib') _

pipeline {
    agent {
        node { label 'oracle' }
    }
    options {
        buildDiscarder(logRotator(numToKeepStr: '10'))
        disableConcurrentBuilds()
        timestamps()
    }
    environment {
        ECR_REGISTRY = 'public.ecr.aws/w4c3e7g0'
        IMAGE_NAME = 'song-runners'
        DOCKER_IMG = "${ECR_REGISTRY}/${IMAGE_NAME}:${TYPE}_${BUILD_NUMBER}"
        TYPE = 'Runner'
        PAT = credentials('PAT')
    }
    stages {        
        stage('Creates Docker Image') {
          steps{
                sh "docker build -t ${IMAGE_NAME}:${TYPE}_${BUILD_NUMBER} ."
          }
        }
        
        
        stage('Push image to ECR') {
          steps{
            script {
                 withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'AWS']]) {
                    sh "docker login -u AWS -p \$(aws ecr get-login-password --region eu-central-1) ${ECR_REGISTRY}"
                    sh "docker tag ${IMAGE_NAME}:${TYPE}_${BUILD_NUMBER} ${DOCKER_IMG}"
                    sh "docker push ${DOCKER_IMG}"
             }
            }
          }
        }
        
    }
}
